plugins {
    id 'fabric-loom' version '0.13-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version + extraVersion()
group = project.maven_group

static def extraVersion() {
    def ENV = System.getenv()
    if (ENV.CI == "true") {
        def branch = ENV.GITHUB_REF
        branch = branch.substring(branch.lastIndexOf("/") + 1)
        def runNumber = ENV.GITHUB_RUN_NUMBER
        return "-pre+" + runNumber + "-" + branch
    }
    return ""
}

repositories {
    mavenCentral()
    maven { url "https://maven.shedaniel.me/" }
    maven { url 'https://jitpack.io' }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url = "https://maven.isxander.dev/releases" }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url = uri("https://maven.noxcrew.com/public") }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modApi("dev.isxander.yacl:yet-another-config-lib-fabric:3.2.1+1.20.2") {
        exclude(group: "org.quiltmc.parsers")
        exclude(group: "com.twelvemonkeys.common")
        exclude(group: "com.twelvemonkeys.imageio")
    }

    modApi("com.terraformersmc:modmenu:8.0.0")

    implementation include('com.github.JnCrMx:discord-game-sdk4j:v0.5.5')
    modApi("com.noxcrew.noxesium:fabric:1.0.5")
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

loom {
    accessWidenerPath = file("src/main/resources/islandutils.accesswidener")
}